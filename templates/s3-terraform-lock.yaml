Description: > 
            CloudFormation template for S3 bucket for Terraform backend
            create S3 bucket with uniqe name based on StackId
              enable vesioning
            create DynamoDB table
            export bucket name to parameter store

Parameters:
  S3BucketNamePrefix:
    Description: The prefix to use for your S3 bucket
    Type: String
    Default: terraform
    AllowedPattern: ^(?!(^xn--|.$))^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$
    ConstraintDescription: Bucket name prefix can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).

Resources:
  BasicParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: TerraformS3
      Type: String
      Value: !Ref TerraformBucket
      Description: SSM Parameter for database username.

  
  TerraformBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join 
        - '-'
        - - !Ref S3BucketNamePrefix
          - !Ref AWS::AccountId
          - !Ref AWS::Region
          - 'bucket'
          - !Select 
            - 0
            - !Split 
              - '-'
              - !Select 
                - 2
                - !Split 
                  - /
                  - !Ref AWS::StackId

  DynamoLock:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TableName: Terraform
      AttributeDefinitions:
        - AttributeName: LockID
          AttributeType: S
      KeySchema:
        - AttributeName: LockID
          KeyType: HASH
      ProvisionedThroughput:
           ReadCapacityUnits: "5"
           WriteCapacityUnits: "5"

Outputs:
     TerraformS3BucketName:
      Description: 'Name of Terraform S3 bucket'
      Value: !Ref TerraformBucket